---
- name: configure elastic repo
  ansible.builtin.include_role:
    name: nephelaiio.elastic_repo
  when: filebeat_repo_manage | bool

- name: inspect packages
  ansible.builtin.package_facts:
    manager: auto

- name: release filebeat package pin
  when: filebeat_package_hold | bool
  block:

    - block:

        - name: install yum version lock support
          ansible.builtin.package:
            name: yum-plugin-versionlock

        - name: disable yum package lock
          community.general.yum_versionlock:
            name: "{{ item }}"
            state: absent
          loop: "{{ [filebeat_package_names] | flatten }}"
          when: item in packages
          tags:
            - skip_ansible_lint

      when: (ansible_os_family | lower) == 'redhat'

    - name: disable apt package lock
      ansible.builtin.dpkg_selections:
        name: "{{ item }}"
        selection: install
      loop: "{{ [filebeat_package_names] | flatten }}"
      when:
        - (ansible_os_family | lower) == 'debian'
        - item in packages

- name: manage filebeat elastic packages
  ansible.builtin.package:
    name: "{{ filebeat_package_names }}"
    state: "{{ filebeat_package_state }}"

- name: configure filebeat service
  when: filebeat_package_state in ['present', 'latest']
  block:

    - name: pin filebeat package release
      when: filebeat_package_hold | bool
      block:

        - name: enable apt package hold
          ansible.builtin.dpkg_selections:
            name: "{{ item }}"
            selection: hold
          loop: "{{ [filebeat_package_names] | flatten }}"
          when: (ansible_os_family | lower) == 'debian'

        - name: enable yum package lock
          community.general.yum_versionlock:
            name: "{{ item }}"
            state: present
          loop: "{{ [filebeat_package_names] | flatten }}"
          when: (ansible_os_family | lower) == 'redhat'
          tags:
            - skip_ansible_lint

    - name: configure filebeat
      ansible.builtin.copy:
        content: |
          # Ansible managed

          {{ filebeat_conf | to_nice_yaml(indent=2) }}
        dest: "{{ filebeat_conf_path }}"
        mode: 0644
      notify: restart filebeat

    - name: prune stale filebeat module configuration files
      ansible.builtin.file:
        path: "{{ filebeat_conf_modules_path }}/{{ module_name }}.yml.disabled"
        state: absent
      vars:
        module_name: "{{ module_conf.module }}"
      loop_control:
        loop_var: module_conf
        label: "{{ module_name }}"
      loop: "{{ filebeat_conf_modules }}"

    - name: manage filebeat module configuration files
      ansible.builtin.copy:
        dest: "{{ filebeat_conf_modules_path }}/{{ module_name }}.yml"
        content: |
          ---
          {{ module_conf_item | to_nice_yaml(indent=2) }}
        mode: 0644
      vars:
        module_name: "{{ module_conf.module }}"
        module_conf_item:
          - "{{ module_conf }}"
      loop_control:
        loop_var: module_conf
        label: "{{ module_name }}"
      notify: restart filebeat
      loop: "{{ filebeat_conf_modules }}"
      when: filebeat_conf_manage | bool

    - name: manage filebeat services
      ansible.builtin.service:
        name: "{{ filebeat_service_name }}"
        state: "{{ filebeat_service_status }}"
        enabled: "{{ filebeat_service_enabled }}"
